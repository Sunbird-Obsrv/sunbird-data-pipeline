---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-jobmanager 
  namespace: {{ .Values.namespace }}
  labels:
    app: flink
    component: {{ .Release.Name }}-jobmanager
spec:
  type: ClusterIP
  ports:
  - name: rpc
    port: {{ .Values.jobmanager.rpcPort }}
  - name: blob
    port: {{ .Values.jobmanager.blobPort }}
  - name: query
    port: {{ .Values.jobmanager.queryPort }}
  - name: ui
    port: {{ .Values.jobmanager.uiPort }}
  - name: prom
    port: {{ .Values.jobmanager.promPort }}
  selector:
    app: flink
    component: {{ .Release.Name }}-jobmanager

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-jobmanager-webui
  namespace: {{ .Values.namespace }}
{{- if .Values.service.annotations }}
{{- with .Values.service.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
{{- end }}
spec:
  {{- if eq .Values.service.type "ClusterIP" }}
  type: ClusterIP
  {{- end }}
  {{- if eq .Values.service.type "LoadBalancer" }}
  type: LoadBalancer
  {{- end }}
  ports:
  - name: rest
    port: {{ .Values.restPort }}
    protocol: TCP
    targetPort: {{ .Values.resttcpPort }}
  selector:
    app: flink
    component: {{ .Release.Name }}-jobmanager

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-taskmanager-prometheus
  namespace: {{ .Values.namespace }}
  labels:
    app: flink
    component: {{ .Release.Name }}-taskmanager
spec:
  type: ClusterIP
  ports:
  - name: prom
    port: {{ .Values.taskmanager.promPort }}
  selector:
    app: flink
    component: {{ .Release.Name }}-taskmanager

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-jobmanager
  namespace: {{ .Values.namespace }}
spec:
  template:
    metadata:
      labels:
        app: flink
        component: {{ .Release.Name }}-jobmanager
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      volumes:
      - name: flink-config-volume
        configMap:
          name: {{ .Release.Name }}-config
          items:
          - key: base-config
            path: base-config.conf
          - key: {{ .Release.Name }}
            path: {{ .Release.Name }}.conf
      restartPolicy: OnFailure
      imagePullSecrets:
      - name: {{ .Values.imagepullsecrets }}
      containers:
      - name: {{ .Release.Name }}-jobmanager
        image: "{{ .Values.dockerhub }}/{{ .Values.registry }}/{{ .Values.repository }}:{{ .Values.image_tag }}"
        imagePullPolicy: Always
        workingDir: {{ .Values.jobmanager.flink_work_dir }}
        command: ["/opt/flink/bin/standalone-job.sh"]
        args: ["start-foreground",
               "--job-classname={{ .Values.job_classname }}", 
               "-Dfs.azure.account.key.{{ .Values.azure_account }}.blob.core.windows.net={{ .Values.azure_secret }}",
               "-Dweb.submit.enable=false",
               "-Dmetrics.reporter.prom.class=org.apache.flink.metrics.prometheus.PrometheusReporter",
               "-Dmetrics.reporter.prom.port={{ .Values.jobmanager.promPort }}",
               "-Djobmanager.rpc.address={{ .Release.Name }}-jobmanager",
               "-Djobmanager.rpc.port={{ .Values.jobmanager.rpcPort }}",
               "-Dparallelism.default=1", 
               "-Dblob.server.port={{ .Values.jobmanager.blobPort }}", 
               "-Dqueryable-state.server.ports={{ .Values.jobmanager.queryPort }}",
               "-Djobmanager.heap.size={{ .Values.jobmanager.heap_memory }}m",
               "--config.file.path",
               "/data/flink/conf/{{ .Release.Name }}.conf"]
        ports:
        - containerPort: {{ .Values.jobmanager.rpcPort }}
          name: rpc
        - containerPort: {{ .Values.jobmanager.blobPort }}
          name: blob
        - containerPort: {{ .Values.jobmanager.queryPort }}
          name: query
        - containerPort: {{ .Values.jobmanager.uiPort }}
          name: ui
        volumeMounts:
        - name: flink-config-volume
          mountPath: {{ .Values.jobmanager.mountPath }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-taskmanager
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.taskmanager.replicas }}
  selector:
    matchLabels:
      app: flink
      component: {{ .Release.Name }}-taskmanager
  template:
    metadata:
      labels:
        app: flink
        component: {{ .Release.Name }}-taskmanager
    spec:
      imagePullSecrets:
      - name: {{ .Values.imagepullsecrets }}
      containers:
      - name: {{ .Release.Name }}-taskmanager
        image: "{{ .Values.dockerhub }}/{{ .Values.registry}}/{{ .Values.repository }}:{{ .Values.image_tag }}"
        imagePullPolicy: Always
        workingDir: {{ .Values.taskmanager.flink_work_dir }}
        command: ["/opt/flink/bin/taskmanager.sh"]
        args: ["start-foreground",
          "-Dfs.azure.account.key.{{ .Values.azure_account }}.blob.core.windows.net={{ .Values.azure_secret }}",
          "-Dweb.submit.enable=false",
          "-Dmetrics.reporter.prom.class=org.apache.flink.metrics.prometheus.PrometheusReporter",
          "-Dmetrics.reporter.prom.host={{ .Release.Name }}-taskmanager",
          "-Dmetrics.reporter.prom.port=9251-9260",
          "-Djobmanager.rpc.address={{ .Release.Name }}-jobmanager",
          "-Dtaskmanager.rpc.port={{ .Values.taskmanager.rpcPort }}",
          "-Dtaskmanager.heap.size={{ .Values.taskmanager.heap_memory }}m"]
        ports:
        - containerPort: {{ .Values.taskmanager.rpcPort }}
          name: rpc
        {{- if .Values.healthcheck }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        {{- end }}
