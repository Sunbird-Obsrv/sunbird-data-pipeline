secor_namespace: "secor"
image_repository: "secor"
image_tag: "0.29"
image_pullPolicy: IfNotPresent
imagepullsecrets: sunbird-registry-secret
secor_storage_class: managed-premium

# image:
#   prefix: {}
#   repository: "secor"
#   tag: "secor-0.29_cf79409_7018"
#   pullPolicy: IfNotPresent

secor_jobs:
  raw-telemetry-backup:
    replicas: 2
    consumer_group: "{{env}}.telemetry.raw.backup"
    service_name: "raw_telemetry_backup"
    base_path: "raw"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{env}}.telemetry.raw"
    kafka_broker_host: "{{ groups['processing-cluster-kafka']|join(',') }}"
    zookeeper_quorum: "{{ groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: ""
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi 
  raw-test-10gPV-backup:
    replicas: 1
    consumer_group: "{{env}}.telemetry.raw.backup.mtest"
    service_name: "raw_telemetry_backup"
    base_path: "raw-migration-test-10gppv"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{env}}.telemetry.raw.tmp.26th"
    kafka_broker_host: "{{ groups['processing-cluster-kafka']|join(',') }}"
    zookeeper_quorum: "{{ groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 300
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: ""
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi  
  failed-telemetry-backup:
    replicas: 1
    service_name: "failed_telemetry_backup"
    consumer_group: "{{ env }}.telemetry.failed.backup"
    base_path: "failed"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.telemetry.failed"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi    
  unique-telemetry-backup:
    replicas: 1
    service_name: "unique_telemetry_backup"
    consumer_group: "{{ env }}.telemetry.unique.backup"
    base_path: "unique/raw"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.telemetry.unique"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{kafkaPartition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  denorm-events-backup:
    replicas: 1
    service_name: "denorm_events_backup"
    consumer_group: "{{ env }}.telemetry.denorm.backup"
    base_path: "telemetry-denormalized"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.telemetry.denorm"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "true"
    partition_prefix_key: "eid"
    partition_prefix_mapping: '{"ME_WORKFLOW_SUMMARY":"summary","DEFAULT":"raw"}'
    output_file_pattern: "{partition}-{kafkaPartition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  derived-denorm-events-backup:
    replicas: 1
    service_name: "derived_denorm_events_backup"
    consumer_group: "{{ env }}.summary.backup"
    base_path: "telemetry-denormalized/summary"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.druid.events.summary"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser" 
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  channel-telemetry-backup:
    replicas: 1
    service_name: "channel_telemetry_backup"
    consumer_group: "{{ env }}.telemetry.channel.backup"
    base_path: "data-exhaust/raw"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.telemetry.denorm"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: "eid"
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: "derivedlocationdata.state"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  channel-summary-backup:
    replicas: 1
    service_name: "channel_summary_backup"
    consumer_group: "{{ env }}.summary.channel.backup"
    base_path: "data-exhaust/summary"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.druid.events.summary"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: "derivedlocationdata.state"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi    
  extractor-failed-backup:
    replicas: 1
    service_name: "extractor_failed_backup"
    consumer_group: "{{ env }}.extractor.failed.backup"
    base_path: "extractor-failed"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.telemetry.extractor.failed"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 21600
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  assess-raw-events-backup:
    replicas: 1
    service_name: "assess_raw_events_backup"
    consumer_group: "{{ env }}.telemetry.assess.raw"
    base_path: "telemetry-raw-assess"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.telemetry.assess.raw"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 21600
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  telemetry-ingest-backup:
    replicas: 1
    service_name: "telemetry_ingest_backup"
    consumer_group: "{{ env }}.telemetry.ingest.backup"
    base_path: "ingest-telemetry"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.telemetry.ingest"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  telemetry-duplicate-backup:
    replicas: 1
    service_name: "telemetry_duplicate_backup"
    consumer_group: "{{ env }}.telemetry.duplicate.backup"
    base_path: "telemetry-duplicate"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.telemetry.duplicate"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  extractor-duplicate-backup:
    replicas: 1
    service_name: "extractor_duplicate_backup"
    consumer_group: "{{ env }}.extractor.duplicate.backup"
    base_path: "extractor-duplicate"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.telemetry.extractor.duplicate"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  derived-telemetry-backup:
    replicas: 1
    service_name: "derived_telemetry_backup"
    consumer_group: "{{ env }}.telemetry.derived.unique.backup"
    base_path: "unique/summary"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.telemetry.derived.unique"
    kafka_broker_host: "{{groups['processing-cluster-kafka']|join(',')}}"
    zookeeper_quorum: "{{groups['processing-cluster-zookeepers']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 600
    partition_prefix_enabled: "true"
    partition_prefix_key: "eid"
    partition_prefix_mapping: '{"ME_WORKFLOW_SUMMARY":"workflow_summary","DEFAULT":"me"}'
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  device-profile-backup:
    replicas: 1
    service_name: "device_profile_backup"
    consumer_group: "{{ env }}.events.device.profile.backup"
    base_path: "device-profile-events"
    timestamp_key: "updated_date"
    fallback_timestamp_key: "updated_date"
    topic: "{{ env }}.events.deviceprofile"
    kafka_broker_host: "{{ secor_ingestion_kafka_brokers }}"
    zookeeper_quorum: "{{ ingestion_zookeepers }}"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  learning-events-backup:
    replicas: 1
    service_name: "learning_events_backup"
    consumer_group: "{{ env }}.learning.graph.events.backup"
    base_path: "learning-events"
    timestamp_key: "createdOn"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.learning.graph.events"
    kafka_broker_host: "{{ secor_ingestion_kafka_brokers }}"
    zookeeper_quorum: "{{ ingestion_zookeepers }}"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  learning-failed-backup:
    replicas: 1
    service_name: "learning_failed_backup"
    consumer_group: "{{ env }}.failed.learning.events.backup"
    base_path: "learning-failed-events"
    timestamp_key: "ets"
    fallback_timestamp_key: "@timestamp"
    azure_account_name: "{{ secor.azure.account_name }}"
    container_name: "{{ secor.azure.container_name }}"
    azure_account_key: "{{ secor.azure.account_key }}"
    topic: "{{ env }}.learning.events.failed"
    kafka_broker_host: "{{ secor_ingestion_kafka_brokers }}"
    zookeeper_quorum: "{{ ingestion_zookeepers }}"
    max_file_size: 100000000
    max_file_age: 3600
    partition_prefix_enabled: "true"
    partition_prefix_key: "jobName"
    partition_prefix_mapping: '{"publish-pipeline":"publish_pipeline","composite-search-indexer":"cs_index","DEFAULT":"failed_events"}'
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  assess-events-backup:
    replicas: 1
    service_name: "assess_events_backup"
    consumer_group: "{{ env }}.telemetry.assess.events.backup"
    base_path: "telemetry-batch-assess"
    timestamp_key: "assessmentTs"
    fallback_timestamp_key: "assessmentTs"
    topic: "{{ env }}.telemetry.assess"
    kafka_broker_host: "{{ secor_ingestion_kafka_brokers }}"
    zookeeper_quorum: "{{ ingestion_zookeepers }}"
    max_file_size: 100000000
    max_file_age: 21600
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  ingestion-cluster-telemetry-backup:
    replicas: 1
    service_name: "ingestion_cluster_telemetry_backup"
    consumer_group: "{{ env }}.telemetry.ingestion.events.backup"
    base_path: "ingestion-telemetry"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ telemetry_ingestion_topic }}"
    kafka_broker_host: "{{ secor_ingestion_kafka_brokers }}"
    zookeeper_quorum: "{{ ingestion_zookeepers }}"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  content-consumption-events-backup:
    replicas: 1
    service_name: "content_consumption_events_backup"
    consumer_group: "{{ env }}.coursebatch.job.request.backup"
    base_path: "content-consumption-events"
    timestamp_key: "ets"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.coursebatch.job.request"
    kafka_broker_host: "{{ secor_ingestion_kafka_brokers }}"
    zookeeper_quorum: "{{ ingestion_zookeepers }}"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  issue-certificate-events-backup:
    replicas: 1
    service_name: "issue_certificate_events_backup"
    consumer_group: "{{ env }}.issue.certificate.request.backup"
    base_path: "issue-certificate-events"
    timestamp_key: "ets"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.issue.certificate.request"
    kafka_broker_host: "{{ secor_ingestion_kafka_brokers }}"
    zookeeper_quorum: "{{ ingestion_zookeepers }}"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi
  content-auto-creation-events-backup:
    replicas: 1
    service_name: "content_auto_creation_events_backup"
    consumer_group: "{{ env }}.auto.creation.job.request.backup"
    base_path: "content-auto-creation-events"
    timestamp_key: "ets"
    fallback_timestamp_key: "@timestamp"
    topic: "{{ env }}.auto.creation.job.request"
    kafka_broker_host: "{{ secor_ingestion_kafka_brokers }}"
    zookeeper_quorum: "{{ ingestion_zookeepers }}"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_channel_identifier: ""
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 500m
      memory: 500Mi