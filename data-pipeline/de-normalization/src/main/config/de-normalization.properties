# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=__env__.DeNormalization

# YARN
#yarn.package.path=file://${basedir}/target/${project.artifactId}-${pom.version}-distribution.tar.gz
yarn.package.path=http://__yarn_host__:__yarn_port__/__env__/${project.artifactId}-${pom.version}-distribution.tar.gz
#yarn.package.path=http://172.31.12.23:8000/${project.artifactId}-${pom.version}-distribution.tar.gz
job.container.count=__denormalization_yarn_container_count__

# Task
task.class=org.ekstep.ep.samza.task.DeNormalizationTask
task.inputs=kafka.__env__.telemetry.with_location
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
# Normally, this would be 3, but we have only one broker.
task.checkpoint.replication.factor=__samza_checkpoint_replication_factor__
task.commit.ms=60000
task.window.ms=300000

# Metrics
metrics.reporters=snapshot
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.__env__.metrics

# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.key.serde=string
systems.kafka.samza.msg.serde=string
# systems.kafka.consumer.zookeeper.connect=localhost:2181/
systems.kafka.consumer.zookeeper.connect=__zookeepers__
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.samza.offset.default=oldest
systems.kafka.producer.bootstrap.servers=__kafka_brokers__
systems.kafka.streams.__env__.metrics.samza.msg.serde=metrics
systems.kafka.consumer.fetch.message.max.bytes=__consumer_fetch_max_bytes__
systems.kafka.producer.max.request.size=__producer_max_request_size_bytes__

# Job Coordinator
job.coordinator.system=kafka
# Normally, this would be 3, but we have only one broker.
job.coordinator.replication.factor=1

# YARN container configuration
# yarn.am.container.memory.mb=__yarn_am_container_mb__
# yarn.container.memory.mb=__dedup_job_yarn_container_memory_mb__

output.success.topic.name=__env__.telemetry.denorm
output.failed.topic.name=__env__.telemetry.failed
output.malformed.topic.name=__env__.telemetry.malformed
output.metrics.topic.name=__env__.pipeline_metrics
output.prometheus.metrics.topic.name=__env__.prom.monitoring.metrics
pipeline.metrics.list=success-message-count,failed-message-count,skipped-message-count,error-message-count,cache-hit-count,cache-empty-values-count,user-cache-hit-count,expired-event-count

# redis
# redis.host=localhost
redis.host=__redis_host__
# redis.port=6379
redis.port=__redis_port__
redis.connection.max=2
redis.connection.idle.max=2
redis.connection.idle.min=1
redis.connection.minEvictableIdleTimeSeconds=120
redis.connection.timeBetweenEvictionRunsSeconds=300
location.db.redis.key.expiry.seconds=__location_db_redis_key_expiry_seconds__

# redis database index
redis.userDB.index=4
redis.contentDB.index=5
redis.dialcodeDB.index=6

# metadata fields
content.metadata.fields=__content_metadata_fields__
user.metadata.fields=__user_metadata_fields__
dialcode.metadata.fields=__dialcode_metadata_fields__

user.signin.type.default = __user_sigin_type_default__
user.login.type.defalut = __user_login_type_default__

telemetry.ignore.period.months=6
summary.filter.events=ME_WORKFLOW_SUMMARY

dialcode.api.host = __dialcode_host__
dialcode.api.endpoint = __dialcode_api_endpoint__
