- name: Debian | Install Maven
  apt:
    pkg: "{{item}}"
    update_cache: yes
    state: latest
    install_recommends: yes
  with_items:
    - maven
    - git

# Running common tasks in master
- include: common.yml

- lineinfile:
    dest: /home/hduser/.bashrc 
    state: present 
    regexp: '^HADOOP_YARN_HOME' 
    line: 'HADOOP_YARN_HOME={{hadoop_yarn_home}}'

- lineinfile:
    dest: /home/hduser/.bashrc 
    state: present 
    regexp: '^HADOOP_CONF_DIR' 
    line: 'HADOOP_CONF_DIR=$HADOOP_YARN_HOME/conf'

- file: 
    path: "/{{hadoop_yarn_home}}/conf/slaves" 
    state: touch

- lineinfile: 
    dest: "/{{hadoop_yarn_home}}/conf/slaves" 
    state: present 
    regexp: "^{{item}}" 
    line: "{{item}}"
  with_items: "{{yarn_slaves}}"

# Running common tasks in slaves
#- name: Running common tasks in slaves
#  include: common.yml
#  delegate_to: "{{slave}}"
#  with_items: "{{yarn_slaves}}"
#  loop_control:
#    loop_var: slave


- name: Download and extract hadoop tarball
  unarchive:
    src: "{{hadoop_download_url}}"
    dest: "/usr/local/"
    owner: hduser
    group: hadoop
    creates: "{{hadoop_yarn_home}}"
    remote_src: yes
  delegate_to: "{{ yarn_slaves }}"
  with_items: "{{ yarn_slaves }}"


- name: Creates symlink
  file: 
    src: /usr/local/hadoop-{{hadoop_version}}
    dest: /usr/local/hadoop
    owner: hduser
    group: hadoop
    state: link
  delegate_to: "{{ yarn_slaves }}"
  with_items: "{{ yarn_slaves }}"

- name: creating conf dir
  file: 
    path: "{{hadoop_yarn_home}}/conf"
    owner: hduser
    group: hadoop 
    recurse: yes 
    state: directory
  delegate_to: "{{ yarn_slaves }}"
  with_items: "{{ yarn_slaves }}"

- name: Templating configs
  template: 
    src: "{{item}}" 
    dest: "{{hadoop_yarn_home}}/conf/{{item}}"
    owner: hduser 
    group: hadoop
  with_items:
    - yarn-site.xml
    - capacity-scheduler.xml   
    - core-site.xml
    - log4j.properties
    - hadoop-env.sh
  delegate_to: "{{ yarn_slaves }}"

- name: Downloading artifacts  
  get_url: 
    url: "http://search.maven.org/remotecontent?filepath=org/{{item}}"
    dest: "{{hadoop_yarn_home}}/share/hadoop/hdfs/lib/"
    owner: hduser
    group: hadoop
  with_items:
    - clapper/grizzled-slf4j_2.10/1.0.1/grizzled-slf4j_2.10-1.0.1.jar
    - apache/samza/samza-yarn_2.10/0.8.0/samza-yarn_2.10-0.8.0.jar
    - apache/samza/samza-core_2.10/0.8.0/samza-core_2.10-0.8.0.jar
  delegate_to: "{{ yarn_slaves }}"

- name: Download and extract scala
  unarchive:
    src: "{{scala_download_url}}"
    dest: "/usr/local/"
    owner: hduser
    group: hadoop
    remote_src: yes
  delegate_to: "{{ yarn_slaves }}"
  with_items: "{{ yarn_slaves }}"

- name: Creates symlink
  file: 
    src: "/usr/local/scala-{{scala_version}}"
    dest: /usr/local/scala
    owner: hduser
    group: hadoop
    state: link
  delegate_to: "{{ yarn_slaves }}"
  with_items: "{{ yarn_slaves }}"

- name: copying scala files
  copy:
    src: "/usr/local/scala-{{scala_version}}/lib/{{item}}"
    dest: "{{hadoop_yarn_home}}/share/hadoop/hdfs/lib/"
    remote_src: true
  with_items:
    - scala-compiler.jar
    - scala-library.jar
  delegate_to: "{{ yarn_slaves }}"

- name: Copy truncate_files.sh
  copy: 
    src: truncate_logs.sh 
    dest: /usr/local/bin
    mode: 755

- name: Add truncate logs to cron
  cron: 
    name: "Truncate yarn logs" 
    minute: "0" 
    job: "/usr/local/bin/truncate_logs.sh" 
    backup: yes
