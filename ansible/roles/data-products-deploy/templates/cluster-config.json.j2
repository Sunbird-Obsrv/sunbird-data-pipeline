
{% if dp_object_store_type == "azure" %}
{
    "jars": [
    {% if cloud_storage_telemetry_type == "azure" %}
        "wasbs://{{ bucket }}@{{cloud_private_storage_accountname}}.blob.core.windows.net/models-{{ model_version }}/{{ analytics_core_artifact }}",
        "wasbs://{{ bucket }}@{{cloud_private_storage_accountname}}.blob.core.windows.net/models-{{ model_version }}/{{ scruid_artifact }}",
        "wasbs://{{ bucket }}@{{cloud_private_storage_accountname}}.blob.core.windows.net/models-{{ model_version }}/{{ analytics_ed_dataporducts_jar_artifact }}"
    {% elif cloud_storage_telemetry_type == "s3" %}
        "s3://{{ bucket }}/models-{{ model_version }}/{{ analytics_core_artifact }}",
        "s3://{{ bucket }}/models-{{ model_version }}/{{ scruid_artifact }}",
        "s3://{{ bucket }}/models-{{ model_version }}/{{ analytics_ed_dataporducts_jar_artifact }}"
    {% elif cloud_storage_telemetry_type == "gcloud" %}
        "gs://{{ bucket }}/models-{{ model_version }}/{{ analytics_core_artifact }}",
        "gs://{{ bucket }}/models-{{ model_version }}/{{ scruid_artifact }}",
        "gs://{{ bucket }}/models-{{ model_version }}/{{ analytics_ed_dataporducts_jar_artifact }}"
    {% endif %}
    ],
    "file": 
    {% if cloud_storage_telemetry_type == "azure" %}
    "wasbs://{{ bucket }}@{{cloud_private_storage_accountname}}.blob.core.windows.net/models-{{ model_version }}/{{ analytics_batch_module_artifact }}",
    {% elif cloud_storage_telemetry_type == "s3" %}
    "s3://{{ bucket }}/models-{{ model_version }}/{{ analytics_batch_module_artifact }}",
    {% elif cloud_storage_telemetry_type == "gcloud" %}
    "gs://{{ bucket }}/models-{{ model_version }}/{{ analytics_batch_module_artifact }}",
    {% endif %}
    "files": [
    {% if cloud_storage_telemetry_type == "azure" %}
        "wasbs://{{ bucket }}@{{cloud_private_storage_accountname}}.blob.core.windows.net/models-{{ model_version }}/application.conf"
    {% elif cloud_storage_telemetry_type == "s3" %}
        "s3://{{ bucket }}/models-{{ model_version }}/{{ analytics_batch_module_artifact }}/application.conf",
    {% elif cloud_storage_telemetry_type == "gcloud" %}
        "gs://{{ bucket }}/models-{{ model_version }}/{{ analytics_batch_module_artifact }}/application.conf",
    {% endif %}
    ],
    "className": "org.ekstep.analytics.job.JobExecutor",
    "executorCores": {{ spark_cluster.executor_core }},
    "executorMemory": "{{ spark_cluster.executor_memory }}",
    "numExecutors": {{ spark_cluster.num_executors }},
    "conf": {
        "spark.sql.autoBroadcastJoinThreshold" : "-1",
        "spark.dynamicAllocation.enabled" :"{{ spark_enable_dynamic_allocation }}",
        "spark.shuffle.service.enabled" :"{{ spark_enable_dynamic_allocation }}",
        "spark.sql.shuffle.partitions" : "{{ spark_sql_shuffle_partitions }}",
        "spark.scheduler.mode" : "FAIR",
        "spark.cassandra.connection.timeoutMS" : "{{ spark_cassandra_connection_timeout_millis }}",
        "spark.cassandra.read.timeoutMS" : "{{ spark_cassandra_query_timeout_millis }}",
        "spark.cassandra.input.fetch.sizeInRows": "{{ spark_cassandra_query_max_rows_fetch_count }}",
        "spark.driver.extraJavaOptions": "-Detwlogger.component=sparkdriver -DlogFilter.filename=SparkLogFilters.xml -DpatternGroup.filename=SparkPatternGroups.xml -Dlog4jspark.root.logger=INFO,console,RFA,ETW,Anonymizer,org.ekstep.analytics -Dlog4jspark.log.dir=/var/log/sparkapp/${user.name} -Dlog4jspark.log.file=sparkdriver.log -Dlog4j.configuration=file:/usr/hdp/current/spark2-client/conf/log4j.properties -Djavax.xml.parsers.SAXParserFactory=com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl -XX:+UseParallelGC -XX:+UseParallelOldGC -Dazure_storage_key={{ cloud_private_storage_accountname }} -Dazure_storage_secret={{ cloud_private_storage_secret }} -Dreports_storage_key={{cloud_private_storage_accountname}} -Dreports_storage_secret={{cloud_private_storage_secret}} -Ddruid_storage_account_key={{ cloud_public_storage_accountname }} -Ddruid_storage_account_secret={{cloud_public_storage_secret}}",
        "spark.executor.extraJavaOptions": "-Detwlogger.component=sparkdriver -DlogFilter.filename=SparkLogFilters.xml -DpatternGroup.filename=SparkPatternGroups.xml -Dlog4jspark.root.logger=INFO,console,RFA,ETW,Anonymizer,org.ekstep.analytics -Dlog4jspark.log.dir=/var/log/sparkapp/${user.name} -Dlog4jspark.log.file=sparkdriver.log -Dlog4j.configuration=file:/usr/hdp/current/spark2-client/conf/log4j.properties -Djavax.xml.parsers.SAXParserFactory=com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl -XX:+UseParallelGC -XX:+UseParallelOldGC -Dazure_storage_key={{ cloud_private_storage_accountname }} -Dazure_storage_secret={{ cloud_private_storage_secret }} -Dreports_storage_key={{cloud_private_storage_accountname}} -Dreports_storage_secret={{cloud_private_storage_secret}} -Ddruid_storage_account_key={{ cloud_public_storage_accountname }} -Ddruid_storage_account_secret={{cloud_public_storage_secret}}"
    }
}
{% elif (dp_object_store_type == "oci") %}
{
    "jars": [
        "oci://{{ bucket }}@{{ oci_namespace }}/models-{{ model_version }}/{{ analytics_core_artifact }}",
        "oci://{{ bucket }}@{{ oci_namespace }}/models-{{ model_version }}/{{ scruid_artifact }}",
        "oci://{{ bucket }}@{{ oci_namespace }}/models-{{ model_version }}/{{ analytics_ed_dataporducts_jar_artifact }}",
        "oci://{{ bucket }}@{{ oci_namespace }}/models-{{ model_version }}/{{ analytics_batch_module_artifact }}"
    ],
    "file": "oci://{{ bucket }}@{{ oci_namespace }}/models-{{ model_version }}/{{ analytics_batch_module_artifact }}",
    "files": [
        "oci://{{ bucket }}@{{ oci_namespace }}/models-{{ model_version }}/application.conf",
        "oci://{{ bucket }}@{{ oci_namespace }}/models-{{ model_version }}/jets3t.properties"
    ],
    "className": "org.ekstep.analytics.job.JobExecutor",
    "executorCores": {{ spark_cluster.executor_core }},
    "executorMemory": "{{ spark_cluster.executor_memory }}",
    "numExecutors": {{ spark_cluster.num_executors }},
    "conf": {
        "spark.sql.autoBroadcastJoinThreshold" : "-1",
        "spark.dynamicAllocation.enabled" :"{{ spark_enable_dynamic_allocation }}",
        "spark.shuffle.service.enabled" :"{{ spark_enable_dynamic_allocation }}",
        "spark.sql.shuffle.partitions" : "{{ spark_sql_shuffle_partitions }}",
        "spark.scheduler.mode" : "FAIR",
        "spark.cassandra.connection.timeoutMS" : "{{ spark_cassandra_connection_timeout_millis }}",
        "spark.cassandra.read.timeoutMS" : "{{ spark_cassandra_query_timeout_millis }}",
        "spark.cassandra.input.fetch.sizeInRows": "{{ spark_cassandra_query_max_rows_fetch_count }}",
        "spark.driver.extraJavaOptions": "-Detwlogger.component=sparkdriver -DlogFilter.filename=SparkLogFilters.xml -DpatternGroup.filename=SparkPatternGroups.xml -Dlog4jspark.root.logger=INFO,console,RFA,ETW,Anonymizer,org.ekstep.analytics -Dlog4jspark.log.dir=/var/log/spark3/${user.name} -Dlog4jspark.log.file=sparkdriver.log -Dlog4j.configuration=file:/usr/odh/2.0.1/spark/conf/log4j.properties -Djavax.xml.parsers.SAXParserFactory=com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl -XX:+UseParallelGC -XX:+UseParallelOldGC -Dazure_storage_key={{ cloud_private_storage_accountname }} -Dazure_storage_secret={{ cloud_private_storage_secret }} -Dreports_storage_key={{cloud_private_storage_accountname}} -Dreports_storage_secret={{cloud_private_storage_secret}} -Ddruid_storage_account_key={{ cloud_public_storage_accountname }} -Ddruid_storage_account_secret={{cloud_public_storage_secret}}, -Daws_storage_key={{ cloud_private_storage_accountname }} -Daws_storage_secret={{ cloud_private_storage_secret }} -Dcom.amazonaws.sdk.s3.defaultStreamBufferSize=512m",
        "spark.executor.extraJavaOptions": "-Detwlogger.component=sparkdriver -DlogFilter.filename=SparkLogFilters.xml -DpatternGroup.filename=SparkPatternGroups.xml -Dlog4jspark.root.logger=INFO,console,RFA,ETW,Anonymizer,org.ekstep.analytics -Dlog4jspark.log.dir=/var/log/spark3/${user.name} -Dlog4jspark.log.file=sparkdriver.log -Dlog4j.configuration=file:/usr/odh/2.0.1/spark/conf/log4j.properties -Djavax.xml.parsers.SAXParserFactory=com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl -XX:+UseParallelGC -XX:+UseParallelOldGC -Dazure_storage_key={{ cloud_private_storage_accountname }} -Dazure_storage_secret={{ cloud_private_storage_secret }} -Dreports_storage_key={{cloud_private_storage_accountname}} -Dreports_storage_secret={{cloud_private_storage_secret}} -Ddruid_storage_account_key={{ cloud_public_storage_accountname }} -Ddruid_storage_account_secret={{cloud_public_storage_secret}} -Daws_storage_key={{ cloud_private_storage_accountname }} -Daws_storage_secret={{ cloud_private_storage_secret }} -Dcom.amazonaws.sdk.s3.defaultStreamBufferSize=512m"
    }
}
{% endif %}