- name: Create the directory
  file: path={{ cassandra_backup_dir }} state=directory recurse=yes
  
- name: copy the backup script 
  template: src=cassandra_backup.j2  dest={{ cassandra_backup_dir }}/cassandra_backup.py mode=0755 

- set_fact:
    cassandra_backup_gzip_file_name: "cassandra-backup-{{ lookup('pipe', 'date +%Y%m%d') }}.tar.gz"

- set_fact:
    cassandra_backup_gzip_file_path: "{{ cassandra_backup_dir }}/{{ cassandra_backup_gzip_file_name }}.tar.gz"

- name: run the backup script
  shell: python cassandra_backup.py {{ cassandra_backup_gzip_file_name }} -d {{ data_dir }}
  args:
    chdir: "{{ cassandra_backup_dir }}"
  async: 25600
  poll: 10
  
- name: Check doc_root path
  shell: ls -all {{ cassandra_backup_dir }}
  register: doc_data

- name: print doc_root to console
  debug:
    var: doc_data  

- name: upload file to gcloud storage
  include_role:
    name: gcp-cloud-storage
    tasks_from: upload-batch.yml
  vars:
    gcp_bucket_name: "{{ gcloud_management_bucket_name }}"
    dest_folder_name: "{{ cassandra_backup_storage }}"
    dest_folder_path: ""
    local_file_or_folder_path: "{{ cassandra_backup_gzip_file_path }}"
  when: cloud_service_provider == "gcloud"
  
- name: clean up backup dir after upload
  file: path={{ cassandra_backup_dir }} state=absent
