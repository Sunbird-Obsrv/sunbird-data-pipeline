{
   "type":"kafka",
   "dataSchema":{
      "dataSource":"sl-observation",
      "parser":{
         "type":"string",
         "parseSpec":{
            "format":"json",
            "timestampSpec":{
               "column":"completedDate",
               "format":"auto"
            },
            "dimensionsSpec":{
               "dimensions":[
                  "completedDate",
                  "createdAt",
                  "createdBy",
                  "criteriaExternalId",
                  "criteriaId",
                  "criteriaName",
                  "entityType",
                  "entityTypeId",
                  "observationId",
                  "observationName",
                  "observationSubmissionId",
                  "questionAnswer",
                  "questionECM",
                  "questionExternalId",
                  "questionId",
                  "questionName",
                  "questionResponseLabel",
                  "questionResponseType",
                  "solutionExternalId",
                  "solutionId",
                  "solutionName",
                  "updatedAt",
                  "instanceParentId",
                  "instanceId",
                  "instanceParentResponsetype",
                  "instanceParentQuestion",
                  "questionSequenceByEcm",
                  "maxScore",
                  "minScore",
                  "percentageScore",
                  "pointsBasedScoreInParent",
                  "totalScore",
                  "scoreAchieved",
                  "totalpercentage",
                  "instanceParentExternalId",
                  "instanceParentEcmSequence",
                  "remarks",
                  "total_evidences",
                  "evidence_count",
                  "school",
                  "parent",
                  "teacher",
                  "schoolLeader",
                  "block",
                  "district",
                  "cluster",
                  "state",
                  "taluk",
                  "region",
                  "zone",
                  "hub",
                  "mandal",
                  "complex",
                  "schoolName",
                  "parentName",
                  "teacherName",
                  "schoolLeaderName",
                  "blockName",
                  "districtName",
                  "clusterName",
                  "stateName",
                  "talukName",
                  "regionName",
                  "zoneName",
                  "hubName",
                  "mandalName",
                  "complexName",
                  "schoolExternalId",
                  "parentExternalId",
                  "teacherExternalId",
                  "schoolLeaderExternalId",
                  "blockExternalId",
                  "districtExternalId",
                  "clusterExternalId",
                  "stateExternalId",
                  "talukExternalId",
                  "regionExternalId",
                  "zoneExternalId",
                  "hubExternalId",
                  "mandalExternalId",
                  "complexExternalId",
                  "schoolTypes",
                  "administrationTypes",
                  "instanceParentCriteriaId",
                  "instanceParentCriteriaExternalId",
                  "instanceParentCriteriaName",
                  "role_title",
                  "location_validated_with_geotag",
                  "distance_in_meters",
                  "entity",
                  "entityExternalId",
                  "entityName",
                  "isAPrivateProgram",
                  "programId",
                  "programName",
                  "programExternalId",
                  {
                     "name":"questionResponseLabel_number",
                     "type":"float"
                  },
                  "criteriaLevel",
                  "criteriaScore",
                  "submissionNumber",
                  "submissionTitle",
                  "beat",
                  "beatName",
                  "beatExternalId",
                  "division",
                  "divisionName",
                  "divisionExternalId",
                  "Village/Ward",
                  "Village/WardName",
                  "Village/WardExternalId",
                  "channel",
                  "parent_channel",
                  "user_districtName",
                  "user_blockName",
                  "user_clusterName",
                  "appName",
                  "evidences",
                  "user_stateName",
                  "domainName",
                  "domainExternalId",
                  "childName",
                  "childType",
                  "childExternalid",
                  "level",
                  "criteriaDescription",
                  "programDescription",
                  "solutionDescription",
                  "label",
                  "imp_project_id",
                  "imp_project_title",
                  "imp_project_goal",
                  "imp_project_externalId",
                  "ancestorName",
                  "scoringSystem",
                  "domainLevel",
                  "domainScore",
                  {
                     "name":"criteriaLevelReport",
                     "type":"boolean"
                  },
                  "user_schoolName",
                  "user_schoolId",
                  "user_schoolUDISE_code",
                  "solution_type",
                  "organisation_name"
               ]
            }
         }
      },
      "metricsSpec":[
         {
            "type":"floatSum",
            "name":"question_response_number",
            "fieldName":"questionResponseLabel_number"
         }
      ],
      "granularitySpec":{
         "type":"uniform",
         "segmentGranularity":"day",
         "queryGranularity":"day",
         "rollup": true
      }
   },
   "tuningConfig":{
      "type":"kafka",
      "reportParseExceptions":false
      "maxRowsPerSegment": 5000000
   },
   "ioConfig":{
      "topic":"{{env}}.sl.observation.druid",
      "consumerProperties":{
         "bootstrap.servers":"{{kafka_brokers}}"
      },
      "taskCount":"{{sl_observation_task_count}}",
      "replicas":1,
      "taskDuration":"PT14400S",
      "useEarliestOffset": true,
      "completionTimeout": "PT1800S"
   }
}
